- project = build.project
%tr.build
  %td.status
    = ci_status_with_icon(build.status)

  %td.build-link
    - if can?(current_user, :read_build, build.project)
      = link_to namespace_project_build_url(build.project.namespace, build.project, build) do
        %strong Build ##{build.id}
    - else
      %strong Build ##{build.id}

    - if build.stuck?
      %i.fa.fa-warning.text-warning

  %td
    - if project
      = link_to project.name_with_namespace, admin_namespace_project_path(project.namespace, project)

  %td
    = link_to build.short_sha, namespace_project_commit_path(build.project.namespace, build.project, build.sha), class: "monospace"

  %td
    - if build.ref
      = link_to build.ref, namespace_project_commits_path(build.project.namespace, build.project, build.ref)
    - else
      .light none

  %td
    - if build.try(:runner)
      = runner_link(build.runner)
    - else
      .light none

  %td
    #{build.stage} / #{build.name}

  %td
    - if build.tags.any?
      - build.tags.each do |tag|
        %span.label.label-primary
          = tag
    - if build.try(:trigger_request)
      %span.label.label-info triggered
    - if build.try(:allow_failure)
      %span.label.label-danger allowed to fail

  %td.duration
    - if build.duration
      #{duration_in_words(build.finished_at, build.started_at)}

  %td.timestamp
    - if build.finished_at
      %span #{time_ago_with_tooltip(build.finished_at)}

  - if defined?(coverage) && coverage
    %td.coverage
      - if build.try(:coverage)
        #{build.coverage}%

  %td
    .pull-right
      - if can?(current_user, :read_build, project) && build.artifacts?
        = link_to download_namespace_project_build_artifacts_path(build.project.namespace, build.project, build), title: 'Download artifacts', class: 'btn btn-build' do
          %i.fa.fa-download
      - if can?(current_user, :update_build, build.project)
        - if build.active?
          = link_to cancel_namespace_project_build_path(build.project.namespace, build.project, build, return_to: request.original_url), method: :post, title: 'Cancel', class: 'btn btn-build' do
            %i.fa.fa-remove.cred
        - elsif defined?(allow_retry) && allow_retry && build.retryable?
          = link_to retry_namespace_project_build_path(build.project.namespace, build.project, build, return_to: request.original_url), method: :post, title: 'Retry', class: 'btn btn-build' do
            %i.fa.fa-refresh
