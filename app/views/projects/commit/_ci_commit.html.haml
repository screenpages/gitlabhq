.row-content-block.build-content.middle-block
  .pull-right
    - if can?(current_user, :update_pipeline, @project)
      - if ci_commit.builds.latest.failed.any?(&:retryable?)
        = link_to "Retry failed", retry_namespace_project_pipeline_path(@project.namespace, @project, ci_commit.id), class: 'btn btn-grouped btn-primary', method: :post

      - if ci_commit.builds.running_or_pending.any?
        = link_to "Cancel running", cancel_namespace_project_pipeline_path(@project.namespace, @project, ci_commit.id), data: { confirm: 'Are you sure?' }, class: 'btn btn-grouped btn-danger', method: :post

  .oneline.clearfix
    - if defined?(pipeline_details) && pipeline_details
      Pipeline
      = link_to "##{ci_commit.id}", namespace_project_pipeline_path(@project.namespace, @project, ci_commit.id), class: "monospace"
      with
      = pluralize ci_commit.statuses.count(:id), "build"
      - if ci_commit.ref
        for
        = link_to ci_commit.ref, namespace_project_commits_path(@project.namespace, @project, ci_commit.ref), class: "monospace"
      - if defined?(link_to_commit) && link_to_commit
        for commit
        = link_to ci_commit.short_sha, namespace_project_commit_path(@project.namespace, @project, ci_commit.sha), class: "monospace"
      - if ci_commit.duration
        in
        = time_interval_in_words ci_commit.duration

- if ci_commit.yaml_errors.present?
  .bs-callout.bs-callout-danger
    %h4 Found errors in your .gitlab-ci.yml:
    %ul
      - ci_commit.yaml_errors.split(",").each do |error|
        %li= error
    You can also test your .gitlab-ci.yml in the #{link_to "Lint", ci_lint_path}

- if @project.builds_enabled? && !ci_commit.ci_yaml_file
  .bs-callout.bs-callout-warning
    \.gitlab-ci.yml not found in this commit

.table-holder
  %table.table.builds
    - ci_commit.statuses.stages.each do |stage|
      = render 'projects/commit/ci_stage', stage: stage, statuses: ci_commit.statuses.where(stage: stage)
